function Unitary = find_opt_U4(rhoin, rhotarg)
k = 2;
fun=@(x)4-...
    mixedfid(rhotarg{1},...
nkron(...
arbUxzx([x(1) x(2) x(3)]),...
arbUxzx([x(4) x(5) x(6)])...
     )...
*rhoin{1}*...
nkron(...
arbUxzx([x(1) x(2) x(3)]),...
arbUxzx([x(4) x(5) x(6)])...
    )' )^k - ...
    mixedfid(rhotarg{2},...
nkron(...
arbUxzx([x(1) x(2) x(3)]),...
arbUxzx([x(4) x(5) x(6)])...
     )...
*rhoin{2}*...
nkron(...
arbUxzx([x(1) x(2) x(3)]),...
arbUxzx([x(4) x(5) x(6)])...
    )' )^k-...
    mixedfid(rhotarg{3},...
nkron(...
arbUxzx([x(1) x(2) x(3)]),...
arbUxzx([x(4) x(5) x(6)])...
     )...
*rhoin{3}*...
nkron(...
arbUxzx([x(1) x(2) x(3)]),...
arbUxzx([x(4) x(5) x(6)])...
    )' )^k-...
    mixedfid(rhotarg{4},...
nkron(...
arbUxzx([x(1) x(2) x(3)]),...
arbUxzx([x(4) x(5) x(6)])...
     )...
*rhoin{4}*...
nkron(...
arbUxzx([x(1) x(2) x(3)]),...
arbUxzx([x(4) x(5) x(6)])...
    )' )^k;


x0=[1,1,1,1,1,1];
[x,val] = fminsearch(fun,x0);
val
Unitary=nkron(...
arbUxzx(x(1:3)),...
arbUxzx(x(4:6))...
     );

% rhoout=Uopt...
% *rhoin*...
% Uopt';
%     
% out.fidopt(hh)=mixedfid(rhotarg,rhoout);